// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CoursesColumns holds the columns for the "courses" table.
	CoursesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "desc", Type: field.TypeString},
		{Name: "background_image", Type: field.TypeString},
		{Name: "is_deleted", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime},
		{Name: "course_teacher_course", Type: field.TypeInt, Nullable: true},
	}
	// CoursesTable holds the schema information for the "courses" table.
	CoursesTable = &schema.Table{
		Name:       "courses",
		Columns:    CoursesColumns,
		PrimaryKey: []*schema.Column{CoursesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "courses_course_teachers_course",
				Columns:    []*schema.Column{CoursesColumns[8]},
				RefColumns: []*schema.Column{CourseTeachersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CourseChaptersColumns holds the columns for the "course_chapters" table.
	CourseChaptersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "title", Type: field.TypeString},
		{Name: "is_deleted", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime},
		{Name: "course_course_chapter", Type: field.TypeInt, Nullable: true},
	}
	// CourseChaptersTable holds the schema information for the "course_chapters" table.
	CourseChaptersTable = &schema.Table{
		Name:       "course_chapters",
		Columns:    CourseChaptersColumns,
		PrimaryKey: []*schema.Column{CourseChaptersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "course_chapters_courses_course_chapter",
				Columns:    []*schema.Column{CourseChaptersColumns[6]},
				RefColumns: []*schema.Column{CoursesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CourseInfosColumns holds the columns for the "course_infos" table.
	CourseInfosColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "click_count", Type: field.TypeInt},
		{Name: "learn_count", Type: field.TypeInt},
		{Name: "total_duration", Type: field.TypeInt},
		{Name: "section_count", Type: field.TypeInt},
		{Name: "price", Type: field.TypeFloat64},
		{Name: "detail", Type: field.TypeString, Default: ""},
		{Name: "state", Type: field.TypeString, Default: "on"},
		{Name: "is_deleted", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime},
		{Name: "course_course_info", Type: field.TypeInt, Nullable: true},
	}
	// CourseInfosTable holds the schema information for the "course_infos" table.
	CourseInfosTable = &schema.Table{
		Name:       "course_infos",
		Columns:    CourseInfosColumns,
		PrimaryKey: []*schema.Column{CourseInfosColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "course_infos_courses_course_info",
				Columns:    []*schema.Column{CourseInfosColumns[12]},
				RefColumns: []*schema.Column{CoursesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CourseSectionsColumns holds the columns for the "course_sections" table.
	CourseSectionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "title", Type: field.TypeString},
		{Name: "type", Type: field.TypeString, Default: "video"},
		{Name: "video", Type: field.TypeString},
		{Name: "is_deleted", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime},
		{Name: "course_course_section", Type: field.TypeInt, Nullable: true},
		{Name: "course_chapter_course_section", Type: field.TypeInt, Nullable: true},
	}
	// CourseSectionsTable holds the schema information for the "course_sections" table.
	CourseSectionsTable = &schema.Table{
		Name:       "course_sections",
		Columns:    CourseSectionsColumns,
		PrimaryKey: []*schema.Column{CourseSectionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "course_sections_courses_course_section",
				Columns:    []*schema.Column{CourseSectionsColumns[8]},
				RefColumns: []*schema.Column{CoursesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "course_sections_course_chapters_course_section",
				Columns:    []*schema.Column{CourseSectionsColumns[9]},
				RefColumns: []*schema.Column{CourseChaptersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CourseTeachersColumns holds the columns for the "course_teachers" table.
	CourseTeachersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "desc", Type: field.TypeString},
		{Name: "avatar", Type: field.TypeString},
		{Name: "title", Type: field.TypeString},
		{Name: "is_deleted", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime},
		{Name: "course_course_teacher", Type: field.TypeInt, Nullable: true},
	}
	// CourseTeachersTable holds the schema information for the "course_teachers" table.
	CourseTeachersTable = &schema.Table{
		Name:       "course_teachers",
		Columns:    CourseTeachersColumns,
		PrimaryKey: []*schema.Column{CourseTeachersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "course_teachers_courses_course_teacher",
				Columns:    []*schema.Column{CourseTeachersColumns[9]},
				RefColumns: []*schema.Column{CoursesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CoursesTable,
		CourseChaptersTable,
		CourseInfosTable,
		CourseSectionsTable,
		CourseTeachersTable,
	}
)

func init() {
	CoursesTable.ForeignKeys[0].RefTable = CourseTeachersTable
	CourseChaptersTable.ForeignKeys[0].RefTable = CoursesTable
	CourseInfosTable.ForeignKeys[0].RefTable = CoursesTable
	CourseSectionsTable.ForeignKeys[0].RefTable = CoursesTable
	CourseSectionsTable.ForeignKeys[1].RefTable = CourseChaptersTable
	CourseTeachersTable.ForeignKeys[0].RefTable = CoursesTable
}
