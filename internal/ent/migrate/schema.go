// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CoursesColumns holds the columns for the "courses" table.
	CoursesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "desc", Type: field.TypeString},
		{Name: "image", Type: field.TypeString},
		{Name: "tags", Type: field.TypeString},
		{Name: "classification", Type: field.TypeString},
		{Name: "is_deleted", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// CoursesTable holds the schema information for the "courses" table.
	CoursesTable = &schema.Table{
		Name:       "courses",
		Columns:    CoursesColumns,
		PrimaryKey: []*schema.Column{CoursesColumns[0]},
	}
	// CourseChaptersColumns holds the columns for the "course_chapters" table.
	CourseChaptersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "title", Type: field.TypeString},
		{Name: "is_deleted", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "course_chapters", Type: field.TypeInt, Nullable: true},
	}
	// CourseChaptersTable holds the schema information for the "course_chapters" table.
	CourseChaptersTable = &schema.Table{
		Name:       "course_chapters",
		Columns:    CourseChaptersColumns,
		PrimaryKey: []*schema.Column{CourseChaptersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "course_chapters_courses_chapters",
				Columns:    []*schema.Column{CourseChaptersColumns[5]},
				RefColumns: []*schema.Column{CoursesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CourseCommentsColumns holds the columns for the "course_comments" table.
	CourseCommentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "username", Type: field.TypeString},
		{Name: "comment", Type: field.TypeString},
		{Name: "order", Type: field.TypeInt, Default: 0},
		{Name: "is_show", Type: field.TypeBool, Default: false},
		{Name: "is_deleted", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// CourseCommentsTable holds the schema information for the "course_comments" table.
	CourseCommentsTable = &schema.Table{
		Name:       "course_comments",
		Columns:    CourseCommentsColumns,
		PrimaryKey: []*schema.Column{CourseCommentsColumns[0]},
	}
	// CourseInfosColumns holds the columns for the "course_infos" table.
	CourseInfosColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "click_count", Type: field.TypeInt, Default: 0},
		{Name: "learn_count", Type: field.TypeInt, Default: 0},
		{Name: "total_duration", Type: field.TypeInt, Default: 0},
		{Name: "section_count", Type: field.TypeInt, Default: 0},
		{Name: "price", Type: field.TypeFloat64},
		{Name: "detail", Type: field.TypeString, Size: 8192, Default: ""},
		{Name: "state", Type: field.TypeInt, Default: 0},
		{Name: "order", Type: field.TypeInt, Default: 0},
		{Name: "is_quality", Type: field.TypeBool, Default: false},
		{Name: "is_deleted", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "course_infos", Type: field.TypeInt, Nullable: true},
	}
	// CourseInfosTable holds the schema information for the "course_infos" table.
	CourseInfosTable = &schema.Table{
		Name:       "course_infos",
		Columns:    CourseInfosColumns,
		PrimaryKey: []*schema.Column{CourseInfosColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "course_infos_courses_infos",
				Columns:    []*schema.Column{CourseInfosColumns[13]},
				RefColumns: []*schema.Column{CoursesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CourseSectionsColumns holds the columns for the "course_sections" table.
	CourseSectionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "title", Type: field.TypeString},
		{Name: "type", Type: field.TypeString, Default: "video"},
		{Name: "video", Type: field.TypeString},
		{Name: "is_deleted", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "course_sections", Type: field.TypeInt, Nullable: true},
		{Name: "course_chapter_course_section", Type: field.TypeInt, Nullable: true},
	}
	// CourseSectionsTable holds the schema information for the "course_sections" table.
	CourseSectionsTable = &schema.Table{
		Name:       "course_sections",
		Columns:    CourseSectionsColumns,
		PrimaryKey: []*schema.Column{CourseSectionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "course_sections_courses_sections",
				Columns:    []*schema.Column{CourseSectionsColumns[7]},
				RefColumns: []*schema.Column{CoursesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "course_sections_course_chapters_course_section",
				Columns:    []*schema.Column{CourseSectionsColumns[8]},
				RefColumns: []*schema.Column{CourseChaptersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CourseSwipersColumns holds the columns for the "course_swipers" table.
	CourseSwipersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "order", Type: field.TypeInt, Unique: true},
		{Name: "image", Type: field.TypeString},
		{Name: "is_show", Type: field.TypeBool},
		{Name: "is_deleted", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "course_swipers", Type: field.TypeInt, Nullable: true},
	}
	// CourseSwipersTable holds the schema information for the "course_swipers" table.
	CourseSwipersTable = &schema.Table{
		Name:       "course_swipers",
		Columns:    CourseSwipersColumns,
		PrimaryKey: []*schema.Column{CourseSwipersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "course_swipers_courses_swipers",
				Columns:    []*schema.Column{CourseSwipersColumns[8]},
				RefColumns: []*schema.Column{CoursesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TeachersColumns holds the columns for the "teachers" table.
	TeachersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "desc", Type: field.TypeString},
		{Name: "avatar", Type: field.TypeString},
		{Name: "title", Type: field.TypeString},
		{Name: "is_deleted", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// TeachersTable holds the schema information for the "teachers" table.
	TeachersTable = &schema.Table{
		Name:       "teachers",
		Columns:    TeachersColumns,
		PrimaryKey: []*schema.Column{TeachersColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "desc", Type: field.TypeString},
		{Name: "avatar", Type: field.TypeString},
		{Name: "title", Type: field.TypeString},
		{Name: "is_deleted", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// TeacherCoursesColumns holds the columns for the "teacher_courses" table.
	TeacherCoursesColumns = []*schema.Column{
		{Name: "teacher_id", Type: field.TypeInt},
		{Name: "course_id", Type: field.TypeInt},
	}
	// TeacherCoursesTable holds the schema information for the "teacher_courses" table.
	TeacherCoursesTable = &schema.Table{
		Name:       "teacher_courses",
		Columns:    TeacherCoursesColumns,
		PrimaryKey: []*schema.Column{TeacherCoursesColumns[0], TeacherCoursesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "teacher_courses_teacher_id",
				Columns:    []*schema.Column{TeacherCoursesColumns[0]},
				RefColumns: []*schema.Column{TeachersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "teacher_courses_course_id",
				Columns:    []*schema.Column{TeacherCoursesColumns[1]},
				RefColumns: []*schema.Column{CoursesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UserCoursesColumns holds the columns for the "user_courses" table.
	UserCoursesColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeInt},
		{Name: "course_id", Type: field.TypeInt},
	}
	// UserCoursesTable holds the schema information for the "user_courses" table.
	UserCoursesTable = &schema.Table{
		Name:       "user_courses",
		Columns:    UserCoursesColumns,
		PrimaryKey: []*schema.Column{UserCoursesColumns[0], UserCoursesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_courses_user_id",
				Columns:    []*schema.Column{UserCoursesColumns[0]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_courses_course_id",
				Columns:    []*schema.Column{UserCoursesColumns[1]},
				RefColumns: []*schema.Column{CoursesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CoursesTable,
		CourseChaptersTable,
		CourseCommentsTable,
		CourseInfosTable,
		CourseSectionsTable,
		CourseSwipersTable,
		TeachersTable,
		UsersTable,
		TeacherCoursesTable,
		UserCoursesTable,
	}
)

func init() {
	CourseChaptersTable.ForeignKeys[0].RefTable = CoursesTable
	CourseInfosTable.ForeignKeys[0].RefTable = CoursesTable
	CourseSectionsTable.ForeignKeys[0].RefTable = CoursesTable
	CourseSectionsTable.ForeignKeys[1].RefTable = CourseChaptersTable
	CourseSwipersTable.ForeignKeys[0].RefTable = CoursesTable
	TeacherCoursesTable.ForeignKeys[0].RefTable = TeachersTable
	TeacherCoursesTable.ForeignKeys[1].RefTable = CoursesTable
	UserCoursesTable.ForeignKeys[0].RefTable = UsersTable
	UserCoursesTable.ForeignKeys[1].RefTable = CoursesTable
}
