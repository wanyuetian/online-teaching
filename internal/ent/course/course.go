// Code generated by ent, DO NOT EDIT.

package course

import (
	"time"
)

const (
	// Label holds the string label denoting the course type in the database.
	Label = "course"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldDesc holds the string denoting the desc field in the database.
	FieldDesc = "desc"
	// FieldImage holds the string denoting the image field in the database.
	FieldImage = "image"
	// FieldTags holds the string denoting the tags field in the database.
	FieldTags = "tags"
	// FieldClassification holds the string denoting the classification field in the database.
	FieldClassification = "classification"
	// FieldIsDeleted holds the string denoting the is_deleted field in the database.
	FieldIsDeleted = "is_deleted"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// EdgeTeachers holds the string denoting the teachers edge name in mutations.
	EdgeTeachers = "teachers"
	// EdgeInfos holds the string denoting the infos edge name in mutations.
	EdgeInfos = "infos"
	// EdgeChapters holds the string denoting the chapters edge name in mutations.
	EdgeChapters = "chapters"
	// EdgeSections holds the string denoting the sections edge name in mutations.
	EdgeSections = "sections"
	// EdgeSwipers holds the string denoting the swipers edge name in mutations.
	EdgeSwipers = "swipers"
	// EdgeUsers holds the string denoting the users edge name in mutations.
	EdgeUsers = "users"
	// Table holds the table name of the course in the database.
	Table = "courses"
	// TeachersTable is the table that holds the teachers relation/edge. The primary key declared below.
	TeachersTable = "teacher_courses"
	// TeachersInverseTable is the table name for the Teacher entity.
	// It exists in this package in order to avoid circular dependency with the "teacher" package.
	TeachersInverseTable = "teachers"
	// InfosTable is the table that holds the infos relation/edge.
	InfosTable = "course_infos"
	// InfosInverseTable is the table name for the CourseInfo entity.
	// It exists in this package in order to avoid circular dependency with the "courseinfo" package.
	InfosInverseTable = "course_infos"
	// InfosColumn is the table column denoting the infos relation/edge.
	InfosColumn = "course_infos"
	// ChaptersTable is the table that holds the chapters relation/edge.
	ChaptersTable = "course_chapters"
	// ChaptersInverseTable is the table name for the CourseChapter entity.
	// It exists in this package in order to avoid circular dependency with the "coursechapter" package.
	ChaptersInverseTable = "course_chapters"
	// ChaptersColumn is the table column denoting the chapters relation/edge.
	ChaptersColumn = "course_chapters"
	// SectionsTable is the table that holds the sections relation/edge.
	SectionsTable = "course_sections"
	// SectionsInverseTable is the table name for the CourseSection entity.
	// It exists in this package in order to avoid circular dependency with the "coursesection" package.
	SectionsInverseTable = "course_sections"
	// SectionsColumn is the table column denoting the sections relation/edge.
	SectionsColumn = "course_sections"
	// SwipersTable is the table that holds the swipers relation/edge.
	SwipersTable = "course_swipers"
	// SwipersInverseTable is the table name for the CourseSwiper entity.
	// It exists in this package in order to avoid circular dependency with the "courseswiper" package.
	SwipersInverseTable = "course_swipers"
	// SwipersColumn is the table column denoting the swipers relation/edge.
	SwipersColumn = "course_swipers"
	// UsersTable is the table that holds the users relation/edge. The primary key declared below.
	UsersTable = "user_courses"
	// UsersInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UsersInverseTable = "users"
)

// Columns holds all SQL columns for course fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldDesc,
	FieldImage,
	FieldTags,
	FieldClassification,
	FieldIsDeleted,
	FieldCreatedAt,
	FieldUpdatedAt,
}

var (
	// TeachersPrimaryKey and TeachersColumn2 are the table columns denoting the
	// primary key for the teachers relation (M2M).
	TeachersPrimaryKey = []string{"teacher_id", "course_id"}
	// UsersPrimaryKey and UsersColumn2 are the table columns denoting the
	// primary key for the users relation (M2M).
	UsersPrimaryKey = []string{"user_id", "course_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
	// DefaultIsDeleted holds the default value on creation for the "is_deleted" field.
	DefaultIsDeleted bool
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
)
